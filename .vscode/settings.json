{
    // 在终端中运行编译命令，否则我们无法与程序通过标准输入交互
    "code-runner.runInTerminal": true,
    // 如果你全局设置中的默认终端是 WSL 之类的，那么可以在工作区设置中改回 PowerShell
    "terminal.integrated.shell.windows": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
    //"terminal.external.windowsExec": "C:\\WINDOWS\\System32\\bash.exe",
    //"terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\bash.exe",
    // 运行代码之前清除之前的输出
    "code-runner.clearPreviousOutput": true,
    // 开启这个后在运行编译命令之前会自动 cd 至文件所在目录
    "code-runner.fileDirectoryAsCwd": true,
    // 因为上面那个选项会自动 cd，所以我删除了默认编译命令中的 cd 语句
    // 同时我将编译结果的输出目录修改为了同目录下的 build 文件夹
    // 不然源码文件和编译结果混杂在一个目录中非常杂乱（尤其是刷题时）
    // 这里只保留了 C 和 C++ 的编译命令，有需要其他语言的请自行添加
    "code-runner.executorMap": {
        "c": "gcc $fileName -o build/$fileNameWithoutExt && .\\build\\$fileNameWithoutExt",
        "cpp": "clang++ --target=x86_64-w64-mingw32 $fileName -o build/$fileNameWithoutExt.exe -std=c++14 && .\\build\\$fileNameWithoutExt.exe",
        //"cpp": "clang++ --target=x86_64-w64-mingw32 $fileName -o build/$fileNameWithoutExt.exe -std=c++14 && build/$fileNameWithoutExt.exe",
        "java": "javac -encoding utf-8 $fileName  && java $fileNameWithoutExt",

    },
    // 运行代码后切换焦点至终端，方便直接输入测试数据
    "code-runner.preserveFocus": false,
    // 在运行代码之前保存文件
    "code-runner.saveFileBeforeRun": true,
    "python.pythonPath": "C:\\Program Files (x86)\\python\\python.exe",
    "files.exclude": {
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    "files.associations": {
        "iostream": "cpp",
        "ostream": "cpp",
        "vector": "cpp",
        "chrono": "cpp",
        "limits": "cpp",
        "valarray": "cpp",
        "unordered_map": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "hash_map": "cpp",
        "*.tcc": "cpp",
        "bitset": "cpp",
        "cctype": "cpp",
        "cfenv": "cpp",
        "charconv": "cpp",
        "cinttypes": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "codecvt": "cpp",
        "complex": "cpp",
        "condition_variable": "cpp",
        "csetjmp": "cpp",
        "csignal": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cuchar": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "forward_list": "cpp",
        "list": "cpp",
        "unordered_set": "cpp",
        "exception": "cpp",
        "fstream": "cpp",
        "functional": "cpp",
        "future": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "iosfwd": "cpp",
        "istream": "cpp",
        "memory": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "ratio": "cpp",
        "scoped_allocator": "cpp",
        "shared_mutex": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "thread": "cpp",
        "type_traits": "cpp",
        "tuple": "cpp",
        "typeindex": "cpp",
        "typeinfo": "cpp",
        "utility": "cpp",
        "string": "cpp",
        "random": "cpp"
    },
    
}